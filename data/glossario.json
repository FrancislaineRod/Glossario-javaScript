[
    {
        "id": 1,
        "titulo": "O que é JavaScript",
        "descricao": "JavaScript é uma linguagem de programação que permite implementar funcionalidades mais complexas em páginas web. Desde o momento em que a página web é exibida no navegador, JavaScript é usado para tornar a página mais responsiva, interativa e dinâmica."
    },
    {
        "id": 2,
        "titulo": "Statement 'for'",
        "descricao": "O statement 'for' cria um loop que consiste em três expressões opcionais, dentro de parênteses e separadas por ponto e vírgula, seguidas por uma declaração ou uma sequência de declarações executadas em sequência."
    },
    {
        "id": 3,
        "titulo": "Funções em JavaScript",
        "descricao": "Uma função em JavaScript é um bloco de código projetado para realizar uma tarefa específica. Uma função é executada quando 'algo' a invoca (chama)."
    },
    {
        "id": 4,
        "titulo": "Objetos em JavaScript",
        "descricao": "JavaScript é uma linguagem baseada em objetos. Um objeto é uma coleção de propriedades, e uma propriedade é uma associação entre um nome (ou chave) e um valor."
    },
    {
        "id": 5,
        "titulo": "Arrays em JavaScript",
        "descricao": "Um array em JavaScript é um objeto global usado na construção de 'arrays', que são tipos de dados de alto nível, semelhantes a listas."
    },
    {
        "id": 6,
        "titulo": "Métodos em JavaScript",
        "descricao": "Métodos em JavaScript são funções definidas como propriedades de objetos JavaScript."
    },
    {
        "id": 7,
        "titulo": "Eventos em JavaScript",
        "descricao": "Eventos em JavaScript são ações que podem ser detectadas pelo navegador."
    },
    {
        "id": 8,
        "titulo": "Callback",
        "descricao": "Um callback em JavaScript é uma função passada como argumento para outra função, que será chamada quando uma determinada ação for concluída ou quando um evento específico ocorrer."
    },
    {
        "id": 9,
        "titulo": "Promises",
        "descricao": "Promises são objetos JavaScript usados para representar o sucesso ou a falha de uma operação assíncrona. Elas permitem que você lide com operações assíncronas de forma mais limpa e legível, evitando o aninhamento excessivo de callbacks."
    },
    {
        "id": 10,
        "titulo": "Async/Await",
        "descricao": "Async/Await é uma funcionalidade introduzida no ECMAScript 2017 que simplifica o uso de Promises em código assíncrono. Ele permite que você escreva código assíncrono de forma síncrona, o que torna mais fácil de entender e dar manutenção."
    },
    {
        "id": 11,
        "titulo": "Arrow Functions",
        "descricao": "Arrow Functions são uma forma mais curta e concisa de escrever funções em JavaScript, introduzidas no ECMAScript 2015 (ES6). Elas oferecem uma sintaxe mais enxuta em comparação com as funções tradicionais, além de preservar o contexto 'this' do código ao qual estão vinculadas."
    },
    {
        "id": 12,
        "titulo": "Spread Operator",
        "descricao": "O Spread Operator é um operador introduzido no ECMAScript 2015 (ES6) que permite expandir uma expressão em múltiplos elementos. Ele é comumente usado para copiar arrays, concatenar arrays ou objetos, e passar argumentos em chamadas de função."
    },
    {
        "id": 13,
        "titulo": "Destructuring Assignment",
        "descricao": "A Destructuring Assignment é uma sintaxe introduzida no ECMAScript 2015 (ES6) que permite extrair valores de arrays e objetos em variáveis individuais. Ela simplifica o código ao descompactar estruturas de dados em partes menores."
    },
    {
        "id": 14,
        "titulo": "Template Literals",
        "descricao": "Template Literals, também conhecidos como template strings, são uma forma de criar strings em JavaScript que permitem a interpolação de expressões e a formatação de texto multilinha de maneira mais conveniente e legível."
    },
    {
        "id": 15,
        "titulo": "Módulos em JavaScript",
        "descricao": "Módulos em JavaScript são blocos de código autônomos que podem ser reutilizados em várias partes de um programa. Eles ajudam a organizar e estruturar o código, facilitando a manutenção e a colaboração em projetos de software."
    },
    {
        "id": 16,
        "titulo": "Babel",
        "descricao": "Babel é uma ferramenta popular de transcompilação de JavaScript usada para converter código ECMAScript 2015+ em uma versão compatível com versões anteriores do JavaScript, permitindo que você use recursos modernos da linguagem enquanto mantém a compatibilidade com navegadores mais antigos."
    },
    {
        "id": 17,
        "titulo": "Webpack",
        "descricao": "Webpack é uma ferramenta de empacotamento de módulos JavaScript que permite criar aplicativos web complexos divididos em módulos independentes, gerenciando dependências e gerando bundles otimizados para produção."
    },
    {
        "id": 18,
        "titulo": "Node.js",
        "descricao": "Node.js é um ambiente de execução JavaScript do lado do servidor que permite que você execute JavaScript fora de um navegador. Ele é baseado no engine V8 do Google Chrome e fornece um ambiente para criar aplicativos de rede escaláveis e de alto desempenho."
    },
    {
        "id": 19,
        "titulo": "Express.js",
        "descricao": "Express.js é um framework web minimalista e flexível para Node.js que fornece um conjunto robusto de recursos para construir APIs e aplicativos web. Ele simplifica o processo de criação de aplicativos web em Node.js, oferecendo uma estrutura simples e intuitiva."
    },
    {
        "id": 20,
        "titulo": "React",
        "descricao":"React é uma biblioteca JavaScript de código aberto mantida pelo Facebook para criar interfaces de usuário (UI) interativas e reativas. Ele é usado para criar componentes de interface de usuário reutilizáveis e construir aplicativos web de página única (SPAs) de alto desempenho."
    }
]
